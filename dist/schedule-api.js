!function(t){var e={};function s(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)s.d(i,n,function(e){return t[e]}.bind(null,n));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(1),n=s(2),r=s(3),o=s(4),a=s(5),u=i({logger:!!o.env.LOGGER&&o.env.LOGGER});u.register(n),u.register(r.default,{name:o.env.STORAGE}),u.register(a.AppModule.footRoot),u.listen(3e3,"0.0.0.0",(t,e)=>{t&&(u.log.error(t),process.exit(1)),u.log.info(`server listening on ${e}`)})},function(t,e){t.exports=require("fastify")},function(t,e){t.exports=require("fastify-compress")},function(t,e){t.exports=require("fastify-pouchdb")},function(t,e){t.exports=require("process")},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(6),n=s(7),r=s(11);class o{constructor(t){this.fastify=t}static footRoot(t,e,s){const i=new o(t);i.setProviders(),i.onInit(),i.setRoute(),i.onChange(),s()}setProviders(){this.jobs=new n.JobsService,this.storage=new i.StorageService(this.fastify)}onInit(){this.storage.get("jobs").then(t=>{if(null===t)return;const{data:e}=t;for(const t in e)e.hasOwnProperty(t)&&this.jobs.put(e[t])}).catch(t=>{console.log(t)})}setRoute(){r.api(this.fastify,this.jobs,this.storage)}onChange(){this.jobs.runtime.on("default",t=>{this.storage.logging({type:"run",identity:t.identity,output:t.output,status:!0,create_time:(new Date).getTime()})}),this.jobs.runtime.on("errors",t=>{this.storage.logging({type:"error",identity:t.identity,output:t.output,status:!0,create_time:(new Date).getTime()})})}}e.AppModule=o},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.StorageService=class{constructor(t){this.fastify=t,this.database=t.pouchdb,this.database.createIndex({index:{fields:["type","identity"],name:"logging",ddoc:"logging",type:"json"}}).then(t=>{"created"===t.result&&console.debug("index create success!")}).catch(t=>{console.log(t)})}async get(t){try{return await this.database.get(t)}catch(t){return"missing"===t.message&&null}}async add(t,e){try{const s=await this.database.get(t),i=Object.assign({_id:t,_rev:s._rev},e);return await this.database.put(i)}catch(s){return"missing"===s.message&&await this.database.put(Object.assign({_id:t},e))}}async logging(t){return await this.database.post({type:t.type,identity:t.identity,output:t.output,create_time:t.create_time})}async find(t,e,s,i){return{lists:(await this.database.find({selector:{type:t,identity:e},limit:s,skip:i,use_index:"logging"})).docs}}}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=s(8),n=s(9),r=s(10);e.JobsService=class{constructor(){this.runtime=new r,this.jobs={},this.cronJobs=new Map}getJobs(){return this.jobs}get(t){if(!this.cronJobs.has(t))return!1;const e=this.cronJobs.get(t);return Object.assign(this.jobs[t],{running:e.running,nextDate:e.nextDate(),lastDate:e.lastDate()})}put(t){this.jobs.hasOwnProperty(t.identity)&&this.delete(t.identity),this.jobs[t.identity]=t;const e=new i.CronJob(t.time,()=>{try{this.runtime.emit("default",{identity:t.identity,output:n.execSync(t.bash).toString()})}catch(e){this.runtime.emit("error",{identity:t.identity,output:e.message}),this.stop(t.identity)}},null,t.start,t.zone);return this.cronJobs.set(t.identity,e),this.jobs.hasOwnProperty(t.identity)&&this.cronJobs.has(t.identity)}delete(t){return!this.cronJobs.has(t)||(this.cronJobs.get(t).stop(),this.cronJobs.delete(t)&&Reflect.deleteProperty(this.jobs,t))}start(t){if(!this.cronJobs.has(t))return!1;const e=this.cronJobs.get(t);return e.start(),e.running}stop(t){if(!this.cronJobs.has(t))return!1;const e=this.cronJobs.get(t);return e.stop(),e.running}}},function(t,e){t.exports=require("cron")},function(t,e){t.exports=require("child_process")},function(t,e){t.exports=require("events")},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.api=(t,e,s)=>{async function i(){return await s.add("jobs",{data:e.getJobs()})}t.post("/all",async(t,s)=>{const i=[];for(const t in e.getJobs())e.getJobs().hasOwnProperty(t)&&i.push(t);s.send({error:0,data:i})}),t.post("/lists",{schema:{body:{required:["identity"],properties:{identity:{type:"array"}}}}},async(t,s)=>{const i=t.body;s.send({error:0,data:i.identity.map(t=>e.get(t))})}),t.post("/get",{schema:{body:{required:["identity"],properties:{identity:{type:"string"}}}}},async(t,s)=>{const i=t.body,n=e.get(i.identity);n?s.send({error:0,data:n}):s.send({error:1,msg:"not exists"})}),t.post("/put",{schema:{body:{required:["identity","time","bash","start","zone"],properties:{identity:{type:"string"},time:{type:"string"},bash:{type:"string"},start:{type:"boolean"},zone:{type:"string"}}}}},async(t,n)=>{const r=t.body,o=e.put(r),a=await s.logging({type:"put",identity:r.identity,response:r,status:o,create_time:(new Date).getTime()}),u=await i();o&&a.ok&&u.ok?n.send({error:0,msg:"ok"}):n.send({error:1,msg:"failed"})}),t.post("/delete",{schema:{body:{required:["identity"],properties:{identity:{type:"string"}}}}},async(t,n)=>{const r=t.body,o=e.delete(r.identity),a=await s.logging({type:"delete",identity:r.identity,response:r,status:o,create_time:(new Date).getTime()}),u=await i();o&&a.ok&&u.ok?n.send({error:0,msg:"ok"}):n.send({error:1,msg:"failed"})}),t.post("/status",{schema:{body:{required:["identity","status"],properties:{identity:{type:"string"},status:{type:"boolean"}}}}},async(t,i)=>{const n=t.body;n.status?e.start(n.identity):e.stop(n.identity),(await s.logging({type:"status",identity:n.identity,response:n,status:!0,create_time:(new Date).getTime()})).ok?i.send({error:0,msg:"ok"}):i.send({error:1,msg:"failed"})}),t.post("/logging",{schema:{body:{required:["type","identity","limit","skip"],properties:{type:{type:"string",enum:["put","delete","status","run","error"]},identity:{type:"string"},limit:{type:"number",minimum:1,maximum:50},skip:{type:"number",minimum:1}}}}},async(t,e)=>{const i=t.body,n=await s.find(i.type,i.identity,i.limit,i.skip);e.send({error:0,data:n})})}}]);